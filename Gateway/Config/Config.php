<?php

declare(strict_types=1);

/**
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category Shipay
 * @package Shipay_PixQrGateway
 * @copyright Copyright (c) 2021 Shipay
 * @author Shipay <ajuda@shipay.com.br>
 *
 * See LICENSE for license details.
 */

namespace Shipay\PixQrGateway\Gateway\Config;

use Shipay\PixQrGateway\Model\Config\Source\Environment;
use Magento\Payment\Gateway\Config\Config as PaymentConfig;

class Config extends PaymentConfig
{
    const ACTIVE = 'active';
    const ENVIRONMENT = 'environment';
    const TITLE = 'title';
    const ACCESS_KEY = 'access_key';
    const CLIENT_ID = 'client_id';
    const SECRET_KEY = 'secret_key';
    const DEBUG = 'debug';
    const PRODUCTION_GATEWAY_URL = 'https://api.shipay.com.br';
    const TEST_GATEWAY_URL = 'https://api-staging.shipay.com.br';
    const AUTOMATICALLY_CANCEL_ORDERS = 'automatically_cancel_orders';

    /**
     * @return boolean
     */
    public function isEnable()
    {
        return (bool)$this->getValue(self::ACTIVE);
    }

    /**
     * @return string
     */
    public function getAccessKey()
    {
        return (string)$this->getValue(self::ACCESS_KEY);
    }

    /**
     * @return string
     */
    public function getClientId()
    {
        return (string)$this->getValue(self::CLIENT_ID);
    }

    /**
     * @return string
     */
    public function getSecretKey()
    {
        return (string)$this->getValue(self::SECRET_KEY);
    }

    /**
     * @return string
     */
    public function getGatewayUrl()
    {
        if ($this->isProductionMode()) {
            return self::PRODUCTION_GATEWAY_URL;
        }

        return self::TEST_GATEWAY_URL;
    }

    /**
     * @return bool
     */
    public function isProductionMode()
    {
        return $this->getEnvironment() === Environment::PRODUCTION;
    }

    /**
     * @return string
     */
    public function getEnvironment()
    {
        return (string)$this->getValue(self::ENVIRONMENT);
    }

    /**
     * @return bool
     */
    public function allowedCancelOrders()
    {
        return (bool)$this->getValue(self::AUTOMATICALLY_CANCEL_ORDERS);
    }

    /**
     * @return bool
     */
    public function isDebugMode()
    {
        return (bool)(int)$this->getValue(self::DEBUG);
    }
}
